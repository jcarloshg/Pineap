type Person @model @auth(rules: [{ allow: public }]) {
  id: ID!
  last_name: String!
  first_name: String!
  birthday: AWSDateTime
  role: String!
  email: String!
  # conection to shop 1-1
  shopId: ID
  shop: Shop @connection(fields: ["shopId"])
  # shop: Shop @connection(keyName: "id", fields: ["id"])
}

# @key(name: "fk_person_shop", fields: ["personID", "address"])
type Shop @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String!
  type: String!
  address: String!
  id_photo: String!
  # conection to shop 1-1
  # schedule: [Day] @connection(name: "fk_shop_day")
  # conection to person 1-1
  # personID: ID
  # person: Person @connection(fields: ["personID"])
}

type Day @model @auth(rules: [{ allow: public }]) {
  id: ID!
  hour_open: String!
  hour_close: String!
  isOpen: Boolean!
  # shop: Shop @connection(name: "fk_shop_day")
}

type Post @model {
  id: ID!
  last_name: String!
  first_name: String!
  birthday: AWSDateTime
  role: String!
  email: String!
  # New field with @connection
  comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
}

# New model
type Comment @model @key(name: "byPost", fields: ["postID", "name"]) {
  id: ID!
  postID: ID!
  post: Post! @connection(fields: ["postID"])
  name: String!
  type: String!
  address: String!
  id_photo: String!
}
